<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.ifeilong</groupId>
	<artifactId>feilong-parent</artifactId>
	<version>3.0.0-SNAPSHOT</version>

	<packaging>pom</packaging>

	<!-- 成立年份 -->
	<inceptionYear>2008</inceptionYear>

	<description>Reduce development, Release ideas</description>

	<url>https://github.com/ifeilong/feilong</url>

	<modules>
		<module>feilong-lib</module>
		<module>feilong-core</module>
		<module>feilong-validator</module>
		<module>feilong-json</module>
		<module>feilong-io</module>

		<module>feilong-servlet</module>
		<module>feilong-accessor</module>

		<module>feilong-net</module>

		<module>feilong-template</module>
		<module>feilong-xml</module>

		<module>feilong-context</module>
		<module>feilong-core-extension</module>
		<module>feilong-formatter</module>
		<module>feilong-namespace</module>
		<module>feilong-security</module>
		<module>feilong-taglib</module>
		<module>feilong-tools</module>

		<module>feilong-office</module>
		<module>feilong-component</module>

		<module>feilong-util-all</module>
	</modules>

	<!--****************************定义属性 properties************************************* -->
	<properties>
		<!-- 不要使用${project.version}, 因为如果真实项目生成的版本不是1.7.0的时候,比如是 0.0.1版本,那么就引用不到feilong包 -->
		<version.feilong-platform>3.0.0-SNAPSHOT</version.feilong-platform>
		<version.feilong-common-test>4.1.0</version.feilong-common-test>

		<!-- 让整个项目统一字符集编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- https://docs.sonarqube.org/latest/analysis/analysis-parameters/ -->
		<v.sonar-maven-plugin>3.7.0.1746</v.sonar-maven-plugin>
		<!-- <sonar.exclusions>**/com/feilong/lib/**/*</sonar.exclusions> -->

		<!-- **********************begin maven-compiler-plugin config******************************************* -->
		<maven-compiler-plugin.source>1.8</maven-compiler-plugin.source>
		<maven-compiler-plugin.target>1.8</maven-compiler-plugin.target>
		<maven-compiler-plugin.encoding>${project.build.sourceEncoding}</maven-compiler-plugin.encoding>
		<!-- **********************end maven-compiler-plugin config******************************************* -->

		<!--****************************第三方************************************ -->

		<!--*********************begin dependency plugins version************************************ -->

		<!-- http://www.bouncycastle.org/java.html -->
		<version.bcprov-jdk15on>1.55</version.bcprov-jdk15on>
		<version.commons-chain>1.2</version.commons-chain>

		<!-- http://commons.apache.org/proper/commons-beanutils/changes-report.html -->
		<version.commons-beanutils>1.9.4</version.commons-beanutils>

		<!-- http://commons.apache.org/proper/commons-codec/changes-report.html#a1.12 -->
		<version.commons-codec>1.14</version.commons-codec>
		<version.commons-collections>3.2.2</version.commons-collections>
		<!-- http://commons.apache.org/proper/commons-collections/index.html -->
		<!-- 4.3 需要 jdk1.8 -->
		<version.commons-collections4>4.4</version.commons-collections4>

		<!--
			The Apache Commons Compress library defines an API for working with ar, cpio, Unix dump, tar, zip, gzip, XZ, Pack200, bzip2, 7z, arj, lzma, snappy, DEFLATE,
			lz4, Brotli, Zstandard, DEFLATE64 and Z files.

			The code in this component has many origins:

			The bzip2, tar and zip support came from Avalon's Excalibur, but originally from Ant, as far as life in Apache goes.
			The tar package is originally Tim Endres' public domain package.
			The bzip2 package is based on the work done by Keiron Liddle as well as Julian Seward's libbzip2.
			It has migrated via:
			Ant -> Avalon-Excalibur -> Commons-IO -> Commons-Compress.
			The cpio package has been contributed by Michael Kuss and the jRPM project.
		-->

		<!-- http://commons.apache.org/proper/commons-compress/ -->
		<!--
			1.20 (requires JDK 1.7+)
		-->
		<version.commons-compress>1.20</version.commons-compress>

		<!-- http://commons.apache.org/proper/commons-digester/ -->
		<version.commons-digester3>3.2</version.commons-digester3>

		<!--http://commons.apache.org/proper/commons-fileupload/changes-report.html#a1.4 -->
		<version.commons-fileupload>1.4</version.commons-fileupload>

		<!-- https://search.maven.org/artifact/ognl/ognl -->
		<!-- OGNL - Object Graph Navigation Library -->
		<version.ognl>3.2.14</version.ognl>

		<!-- http://hc.apache.org/downloads.cgi -->
		<version.httpcomponents>4.5.12</version.httpcomponents>

		<!-- http://commons.apache.org/proper/commons-lang/ -->
		<!-- https://github.com/apache/commons-lang/blob/master/RELEASE-NOTES.txt -->
		<!--
			Lang 3.9 and onwards now targets Java 8, making use of features that arrived with Java 8.
			Commons Lang 3.6 at least requires Java 7.0.
			Note that this has changed from Commons Lang 3.5, which only required Java 1.6
		-->
		<version.commons-lang3>3.10</version.commons-lang3>

		<!-- http://commons.apache.org/proper/commons-logging/download_logging.cgi -->
		<!-- commons-logging 仅仅 统一下版本 feilong platform 不直接使用这个jar -->

		<!-- see in http://commons.apache.org/proper/commons-io/index.html -->
		<!--
			Commons IO 2.6 (requires JDK 1.7+)
			Commons IO 2.5 (requires JDK 1.6+)
		-->
		<version.commons-io>2.6</version.commons-io>

		<!-- see in http://commons.apache.org/proper/commons-net/index.html -->
		<version.commons-net>3.6</version.commons-net>

		<!-- http://commons.apache.org/proper/commons-validator/download_validator.cgi -->
		<version.commons-validator>1.6</version.commons-validator>

		<!-- http://www.jcraft.com/jsch/ChangeLog -->
		<version.jsch>0.1.55</version.jsch>

		<!-- https://jsoup.org/news/ -->
		<version.jsoup>1.13.1</version.jsoup>

		<version.javamail>1.4.7</version.javamail>
		<version.javax.mail>1.6.2</version.javax.mail>
		<version.commons-email>1.5</version.commons-email>

		<version.servlet-api>3.1.0</version.servlet-api>
		<version.jsp-api>2.3.3</version.jsp-api>
		<version.el-api>3.0.0</version.el-api>
		<version.jstl>1.2</version.jstl>

		<!-- https://junit.org/junit4/ -->
		<version.junit>4.13</version.junit>
		<version.hamcrest-library>1.3</version.hamcrest-library>

		<!-- http://logging.apache.org/log4j/1.2/download.html -->
		<version.log4j>1.2.17</version.log4j>

		<!-- https://logback.qos.ch/news.html -->
		<version.logback>1.2.3</version.logback>

		<!-- http://poi.apache.org/ -->
		<!-- http://poi.apache.org/devel/history/changes-3x.html -->
		<!-- 4.0.1 之后需要 jdk8 -->
		<version.poi>4.1.2</version.poi>
		<!-- 新版poi需要这个jar -->
		<version.ooxml-schemas>1.4</version.ooxml-schemas>

		<!-- http://www.slf4j.org/news.html -->
		<version.slf4j>1.7.30</version.slf4j>

		<version.spring>4.3.27.RELEASE</version.spring>

		<!-- http://x-stream.github.io/news.html -->
		<!-- #133: XStream 1.4.11 fails to run on a Java Runtime < 8. -->
		<version.xstream>1.4.12</version.xstream>

		<!-- http://velocity.apache.org/news.html -->
		<!-- Velocity Engine 2.1 now requires Java 1.8+. -->
		<version.velocity-engine>2.2</version.velocity-engine>

		<!--
			http://tiles.apache.org/framework/whats-new.html

			Removals in Tiles 3.0
			Upgraded from JavaSE 5.0 to JavaSE 6.0.
			Upgraded from Servlet 2.4 and JSP 2.0 to Servlet 2.5 and JSP 2.1.
			Changed the Java API to adopt the Request API. The XML files and taglibs are compatible with tiles 2.2.
			Dropped the parameter based configuration that was deprecated in 2.2.
		-->
		<version.tiles>3.0.8</version.tiles>
		<!--*********************end dependency plugins version************************************ -->

		<!--*********************begin plugins version************************************ -->
		<!-- http://maven.apache.org/plugins/maven-antrun-plugin/ -->
		<v.maven-antrun-plugin>3.0.0</v.maven-antrun-plugin>

		<!-- http://maven.apache.org/components/plugins/maven-assembly-plugin/ -->
		<v.maven-assembly-plugin>3.3.0</v.maven-assembly-plugin>

		<v.maven-clean-plugin>3.1.0</v.maven-clean-plugin>

		<!-- http://maven.apache.org/plugins/maven-compiler-plugin/download.cgi -->
		<!-- https://issues.apache.org/jira/projects/MCOMPILER?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-compiler-plugin>3.8.1</v.maven-compiler-plugin>

		<v.maven-changes-plugin>2.12.1</v.maven-changes-plugin>

		<!-- http://maven.apache.org/plugins/maven-changelog-plugin/changelog-mojo.html -->
		<v.maven-changelog-plugin>2.3</v.maven-changelog-plugin>

		<!-- CheckStyle能够帮助Java开发人员准守某些编码规范的工具。它能够自动检查代码。 -->
		<!-- <v.maven-checkstyle-plugin>2.17</v.maven-checkstyle-plugin> -->

		<!-- http://maven.apache.org/plugins/maven-dependency-plugin/index.html -->
		<v.maven-dependency-plugin>3.1.2</v.maven-dependency-plugin>
		<v.maven-deploy-plugin>2.8.2</v.maven-deploy-plugin>

		<v.maven-install-plugin>2.5.2</v.maven-install-plugin>

		<!-- https://issues.apache.org/jira/projects/MJAVADOC?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-javadoc-plugin>3.2.0</v.maven-javadoc-plugin>

		<!-- https://issues.apache.org/jira/projects/MJAR?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-jar-plugin>3.2.0</v.maven-jar-plugin>

		<v.maven-jxr-plugin>2.5</v.maven-jxr-plugin>
		<!-- http://maven.apache.org/plugins/maven-pmd-plugin/check-mojo.html -->
		<v.maven-pmd-plugin>3.13.0</v.maven-pmd-plugin>

		<!-- 用来做maven 插件的 -->
		<!-- http://maven.apache.org/plugin-tools/maven-plugin-plugin/project-info.html -->
		<v.maven-plugin-plugin>3.6.0</v.maven-plugin-plugin>

		<!-- https://maven.apache.org/scm/ -->
		<!-- SCM Software Configuration Management 软件配置管理 where each SCM command is implemented as a plugin goal -->
		<!-- 目前主要用于 scm-checkin-all.sh 一键push脚本 -->
		<v.maven-scm-plugin>1.11.2</v.maven-scm-plugin>

		<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
		<!-- https://issues.apache.org/jira/projects/MSITE?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-site-plugin>3.9.0</v.maven-site-plugin>

		<!-- http://maven.apache.org/plugins/maven-source-plugin/download.cgi -->
		<!-- https://issues.apache.org/jira/projects/MSOURCES?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-source-plugin>3.2.1</v.maven-source-plugin>

		<!--http://maven.apache.org/surefire/maven-surefire-plugin/ -->
		<!--https://issues.apache.org/jira/projects/SUREFIRE?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=released-unreleased -->
		<v.maven-surefire-plugin>2.22.2</v.maven-surefire-plugin>
		<v.maven-release-plugin>2.5.3</v.maven-release-plugin>

		<!-- https://issues.apache.org/jira/browse/MRESOURCES/?selectedTab=com.atlassian.jira.jira-projects-plugin:changelog-panel -->
		<v.maven-resources-plugin>3.1.0</v.maven-resources-plugin>
		<v.maven-gpg-plugin>1.6</v.maven-gpg-plugin>

		<!-- http://maven.apache.org/plugins/maven-war-plugin/index.html -->
		<!-- https://issues.apache.org/jira/projects/MWAR?selectedItem=com.atlassian.jira.jira-projects-plugin:release-page&status=all -->
		<v.maven-war-plugin>3.2.3</v.maven-war-plugin>

		<v.maven-shade-plugin>3.2.0</v.maven-shade-plugin>

		<!-- https://github.com/mojohaus/native2ascii-maven-plugin/wiki -->
		<v.native2ascii-maven-plugin>2.0.1</v.native2ascii-maven-plugin>

		<v.site-maven-plugin>0.12</v.site-maven-plugin>

		<!-- taglist 检查报告 -->
		<v.taglist-maven-plugin>2.4</v.taglist-maven-plugin>

		<v.license-maven-plugin>3.0</v.license-maven-plugin>

		<!-- 优雅地管理项目版本号 -->
		<!-- http://www.mojohaus.org/versions-maven-plugin/ -->
		<v.versions-maven-plugin>2.7</v.versions-maven-plugin>

		<!-- http://maven.apache.org/plugins/maven-project-info-reports-plugin/ -->
		<v.maven-project-info-reports-plugin>3.0.0</v.maven-project-info-reports-plugin>

		<!-- https://github.com/jacoco/jacoco/releases -->
		<v.jacoco-maven-plugin>0.8.5</v.jacoco-maven-plugin>

		<!-- **********************end plugins version******************************************* -->

		<!-- **********************begin native2ascii config******************************************* -->
		<native2ascii-maven-plugin.pattern>**/*.properties</native2ascii-maven-plugin.pattern>
		<native2ascii-maven-plugin.encoding>${project.build.sourceEncoding}</native2ascii-maven-plugin.encoding>
		<!-- **********************end native2ascii config******************************************* -->

		<!-- **********************begin maven-surefire-plugin config******************************************* -->
		<maven-surefire-plugin.skip>false</maven-surefire-plugin.skip>
		<maven-surefire-plugin.include>**/SuiteTests</maven-surefire-plugin.include>
		<!-- **********************end maven-surefire-plugin config******************************************* -->

		<!-- **********************begin maven-javadoc-plugin config******************************************* -->
		<!-- 用来编译生成文档 -->
		<maven-javadoc-plugin.encoding>${project.build.sourceEncoding}</maven-javadoc-plugin.encoding>
		<maven-javadoc-plugin.docencoding>${project.build.sourceEncoding}</maven-javadoc-plugin.docencoding>
		<!-- 用来显示页面 META 部分 content="text/html; charset=GBK" -->
		<maven-javadoc-plugin.charset>${project.build.sourceEncoding}</maven-javadoc-plugin.charset>
		<!-- 用于读取javadoc 内部使用的 配置文件, 比如 描述文字为 描述,英文环境为description -->
		<maven-javadoc-plugin.locale>en_US</maven-javadoc-plugin.locale>

		<maven-javadoc-plugin.outputDirectory>/Users/feilong/workspace/feilong/else/javadoc/${project.artifactId}</maven-javadoc-plugin.outputDirectory>
		<maven-javadoc-plugin.reportOutputDirectory>/Users/feilong/workspace/feilong/else/javadoc/${project.artifactId}</maven-javadoc-plugin.reportOutputDirectory>
		<maven-javadoc-plugin.destDir>${project.artifactId}</maven-javadoc-plugin.destDir>
		<maven-javadoc-plugin.javadocVersion>1.8.0</maven-javadoc-plugin.javadocVersion>
		<maven-javadoc-plugin.javadocDirectory>/Users/feilong/Development/DataCommon/Files/Java/Apache Maven/javadoc/springframework</maven-javadoc-plugin.javadocDirectory>

		<maven-javadoc-plugin.stylesheetfile>${maven-javadoc-plugin.javadocDirectory}/stylesheet.css</maven-javadoc-plugin.stylesheetfile>

		<!-- If no custom stylesheet is specified in the <stylesheetfile/> parameter,
			the <stylesheet/> parameter will indicate which stylesheet will be used

			the stylesheet included in the maven javadoc plugin or the default stylesheet used by the javadoc tool.
			maven value indicates the maven javadoc plugin stylesheet,
			while java value indicates the default javadoc tool stylesheet.

			The default is java value if not specified.
		-->
		<maven-javadoc-plugin.stylesheet>java</maven-javadoc-plugin.stylesheet>

		<maven-site-plugin.outputDirectory>/Users/feilong/workspace/feilong/else/site/${project.artifactId}</maven-site-plugin.outputDirectory>

		<!-- **********************end maven-javadoc-plugin config******************************************* -->
		<developer.feilong.name>feilong</developer.feilong.name>
	</properties>


	<dependencies>
		<!--******** slf4j******** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!--******************** test************************* -->

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- hamcrest-library -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- feilong-common-test -->
		<dependency>
			<groupId>com.github.ifeilong</groupId>
			<artifactId>feilong-common-test</artifactId>
			<version>${version.feilong-common-test}</version>
			<scope>test</scope>
		</dependency>

		<!-- slf4j-log4j12 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!--*********************dependencyManagement****************************** -->
	<dependencyManagement>
		<dependencies>

			<!--*******************feilong************************* -->
			<!-- feilong-core -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-core</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-validator -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-validator</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-util-all -->
			<dependency>
				<groupId>com.github.ifeilong</groupId>
				<artifactId>feilong-util-all</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-core-extension -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-core-extension</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-json -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-json</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-json tests -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-json</artifactId>
				<version>${version.feilong-platform}</version>
				<classifier>tests</classifier>
			</dependency>

			<!-- feilong-servlet -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-servlet</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-taglib -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-taglib</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-security -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-security</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!--feilong-template -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-template</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!--feilong-formatter -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-formatter</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- feilong-io -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>feilong-io</artifactId>
				<version>${version.feilong-platform}</version>
			</dependency>

			<!-- *******************spring********************************* -->

			<!-- spring-test -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${version.spring}</version>
			</dependency>

			<!-- **************************************************** -->
			<!-- java mail -->
			<!-- <dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${version.javamail}</version>
				</dependency> -->

			<!-- -->
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>javax.mail</artifactId>
				<version>${version.javax.mail}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${version.commons-email}</version>
			</dependency>

			<!-- *********************apache******************************* -->

			<!-- commons-lang3 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.commons-lang3}</version>
			</dependency>

			<!-- commons-compress -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${version.commons-compress}</version>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${version.bcprov-jdk15on}</version>
			</dependency>

			<!-- commons-validator -->
			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${version.commons-validator}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-beanutils</artifactId>
						<groupId>commons-beanutils</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-collections</artifactId>
						<groupId>commons-collections</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- jsch 用于sftp 传输 -->
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>${version.jsch}</version>
			</dependency>

			<!-- jsoup -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${version.jsoup}</version>
			</dependency>

			<!-- commons-net -->
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${version.commons-net}</version>
			</dependency>

			<!--
				HttpCore is a set of low level HTTP transport components that can be used to build custom client and server side HTTP services with a minimal footprint.

				HttpCore supports two I/O models: blocking I/O model based on the classic Java I/O and non-blocking, event driven I/O model based on Java NIO.
				The blocking I/O model may be more appropriate for data intensive, low latency scenarios, whereas the non-blocking model may be more appropriate for high latency
				scenarios where raw data throughput is less important than the ability to handle thousands of simultaneous HTTP connections in a resource efficient manner.
			-->
			<!-- 4.5.3 没有 httpcore -->
			<!-- httpcore
				<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${version.httpcore}</version>
				</dependency> -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${version.httpcomponents}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpclient</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- HttpClient is a HTTP/1.1 compliant HTTP agent implementation based on HttpCore.
				It also provides reusable components for client-side authentication,
				HTTP state management, and HTTP connection management.

				HttpComponents Client is a successor of and replacement for Commons HttpClient 3.x.

				Users of Commons HttpClient are strongly encouraged to upgrade. -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${version.httpcomponents}</version>
			</dependency>

			<!-- commons-beanutils -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${version.commons-beanutils}</version>
			</dependency>

			<!-- commons-codec -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${version.commons-codec}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-digester3</artifactId>
				<version>${version.commons-digester3}</version>
			</dependency>

			<dependency>
				<artifactId>commons-chain</artifactId>
				<groupId>commons-chain</groupId>
				<version>${version.commons-chain}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-engine-core</artifactId>
				<version>${version.velocity-engine}</version>
			</dependency>

			<!-- commons-collections Requires Java 1.2+ 仅仅 统一下版本 feilong platform 不直接使用这个jar -->
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${version.commons-collections}</version>
			</dependency>

			<!-- commons-collections4 Requires Java 5.0+ -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${version.commons-collections4}</version>
			</dependency>

			<!-- commons-fileupload -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${version.commons-fileupload}</version>
			</dependency>

			<!-- commons-io -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.commons-io}</version>
			</dependency>

			<dependency>
				<groupId>ognl</groupId>
				<artifactId>ognl</artifactId>
				<version>${version.ognl}</version>
			</dependency>

			<!-- ***************************** poi ***************************** -->
			<!-- poi HSSF is our port of the Microsoft Excel 97(-2007) file format (BIFF8) to pure Java. -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${version.poi}</version>
			</dependency>

			<!-- poi-ooxml XSSF is our port of the Microsoft Excel XML (2007+) file format (OOXML) to pure Java -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${version.poi}</version>
				<exclusions>
					<exclusion>
						<groupId>com.github.virtuald</groupId>
						<artifactId>curvesapi</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- poi-ooxml-schemas是ooxml-schemas的精简版 -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>ooxml-schemas</artifactId>
				<version>${version.ooxml-schemas}</version>
			</dependency>

			<!-- *********************json******************************* -->
			<!-- xstream -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${version.xstream}</version>
			</dependency>

			<!--******** slf4j******** -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- ***********log4j *************** -->

			<!-- slf4j-log4j12 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${version.slf4j}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- log4j -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${version.log4j}</version>
			</dependency>

			<!--******** logback ******** -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${version.logback}</version>
			</dependency>

			<!--jul-to-slf4j 桥接 用来输出 Java Logging Framework (JUL) java.util.logging.* -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- jcl-over-slf4j 桥接，用来输出 第三方Jakarta Commons Logging (JCL) -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- log4j-over-slf4j桥接 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!--************************* tiles******************* -->
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-core</artifactId>
				<version>${version.tiles}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>jcl-over-slf4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-api</artifactId>
				<version>${version.tiles}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-jsp</artifactId>
				<version>${version.tiles}</version>
			</dependency>

			<!-- jstl -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${version.jstl}</version>
			</dependency>

			<!--********************************provided******************************** -->
			<!-- servlet-api -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${version.servlet-api}</version>
				<scope>provided</scope>
			</dependency>

			<!-- jsp-api -->
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<version>${version.jsp-api}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>${version.el-api}</version>
				<scope>provided</scope>
			</dependency>


			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>

			<!-- hamcrest-library -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>${version.hamcrest-library}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<!--********************************build****************************************** -->
	<build>
		<plugins>

			<!-- maven-project-info-reports-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${v.maven-project-info-reports-plugin}</version>
			</plugin>

			<!-- versions-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${v.versions-maven-plugin}</version>
			</plugin>

			<!-- maven-scm-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>${v.maven-scm-plugin}</version>
				<configuration>
					<connectionType>developerConnection</connectionType>
				</configuration>
			</plugin>

			<!-- sonar-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${v.sonar-maven-plugin}</version>
			</plugin>

			<!-- native2ascii-maven-plugin 国际化插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
				<version>${v.native2ascii-maven-plugin}</version>

				<executions>
					<execution>
						<id>native2ascii-resources</id>
						<goals>
							<goal>resources</goal>
						</goals>
						<phase>process-resources</phase><!-- default -->
						<configuration>
							<srcDir>src/main/resources</srcDir><!-- default -->
							<targetDir>${project.build.outputDirectory}</targetDir>

							<encoding>${native2ascii-maven-plugin.encoding}</encoding>
							<includes>
								<include>${native2ascii-maven-plugin.pattern}</include>
							</includes>
						</configuration>
					</execution>

					<execution>
						<id>native2ascii-testResources</id>
						<goals>
							<goal>testResources</goal>
						</goals>
						<phase>process-test-resources</phase><!-- default -->
						<configuration>
							<srcDir>src/test/resources</srcDir><!-- default -->
							<targetDir>${project.build.testOutputDirectory}</targetDir>

							<encoding>${native2ascii-maven-plugin.encoding}</encoding>
							<includes>
								<include>${native2ascii-maven-plugin.pattern}</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- maven-resources-plugin插件 -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${v.maven-resources-plugin}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>

					<!-- Copy any empty directories included in the Resources. -->
					<includeEmptyDirs>true</includeEmptyDirs>

					<!-- Additional file extensions to not apply filtering (already defined are : jpg, jpeg, gif, bmp, png) -->
					<nonFilteredFileExtensions>
						<!-- see https://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html -->
						<nonFilteredFileExtension>xls</nonFilteredFileExtension>
						<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
						<nonFilteredFileExtension>swf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
						<configuration>
							<detail>true</detail>
						</configuration>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-compiler-plugin -->
			<plugin>
				<!-- true or false，是否此插件配置将会应用于poms，那些继承于此的项目 -->
				<inherited>true</inherited>

				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${v.maven-compiler-plugin}</version>
				<configuration>
					<!-- 指定高版本的源码和编译后的字节码文件 -->
					<source>${maven-compiler-plugin.source}</source>
					<target>${maven-compiler-plugin.target}</target>
					<encoding>${maven-compiler-plugin.encoding}</encoding>
					<!-- <verbose>true</verbose> -->
					<detail>true</detail>
				</configuration>
			</plugin>

			<!-- maven-javadoc-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${v.maven-javadoc-plugin}</version>
				<configuration>
					<!-- <additionalparam>-Xdoclint:none</additionalparam> -->

					<!-- <verbose>true</verbose> -->
					<destDir>${maven-javadoc-plugin.destDir}</destDir>

					<outputDirectory>${maven-javadoc-plugin.outputDirectory}</outputDirectory>
					<reportOutputDirectory>${maven-javadoc-plugin.reportOutputDirectory}</reportOutputDirectory>

					<stylesheet>${maven-javadoc-plugin.stylesheet}</stylesheet>
					<stylesheetfile>${maven-javadoc-plugin.stylesheetfile}</stylesheetfile>

					<!-- <overview>src/main/java/overview.html</overview> -->

					<docfilessubdirs>true</docfilessubdirs>
					<!---->
					<javadocDirectory>${maven-javadoc-plugin.javadocDirectory}</javadocDirectory>
					<javadocVersion>${maven-javadoc-plugin.javadocVersion}</javadocVersion>

					<!-- Specifies the title to be placed in the HTML title tag.  -->
					<windowtitle>${project.name} ${project.version} API create by feilong</windowtitle>

					<!-- Specifies whether or not the author text is included in the generated Javadocs.  -->
					<author>true</author>
					<!-- Includes the version text in the generated docs.  -->
					<version>true</version>

					<failOnError>false</failOnError>

					<locale>${maven-javadoc-plugin.locale}</locale>

					<charset>${maven-javadoc-plugin.charset}</charset>
					<docencoding>${maven-javadoc-plugin.docencoding}</docencoding>
					<encoding>${maven-javadoc-plugin.encoding}</encoding>

					<header>${project.name} ${project.version} API</header>
					<footer>${project.name} ${project.version} API</footer>

					<bottom>
						<![CDATA[Copyright &copy; {inceptionYear}-{currentYear} by feilong]]>
					</bottom>

					<!-- Detect the Javadoc links for all dependencies defined in the project. -->
					<detectLinks>true</detectLinks>
					<detectOfflineLinks>true</detectOfflineLinks>

					<!-- By default, the goal detects the Javadoc API link depending the value of the source parameter in theorg.apache.maven.plugins:maven-compiler-plugin (defined
						in ${project.build.plugins} or in${project.build.pluginManagement}),
					-->
					<detectJavaApiLink>true</detectJavaApiLink>
					<links>
						<!-- <link>http://docs.oracle.com/javase/7/docs/api/</link> -->
						<link>https://docs.oracle.com/javaee/7/api/</link>

						<link>http://commons.apache.org/proper/commons-lang/javadocs/api-release/</link>

						<link>http://commons.apache.org/proper/commons-io/javadocs/api-release/</link>
						<link>http://commons.apache.org/proper/commons-beanutils/javadocs/v${version.commons-beanutils}/apidocs/</link>


						<!-- <link>http://docs.spring.io/spring/docs/${version.spring}/javadoc-api/</link> -->

						<!-- <link>https://github.com/venusdrogon/feilongjavadocs/feilong-core/</link>
							<link>https://github.com/venusdrogon/feilongjavadocs/feilong-servlet/</link>
							<link>https://github.com/venusdrogon/feilongjavadocs/feilong-io/</link> -->


						<!-- 404 not find -->
						<!-- <link>http://commons.apache.org/proper/commons-collections/javadocs/api-release/</link> -->

						<!-- 404 not find -->
						<!-- <link>http://ezmorph.sourceforge.net/apidocs/</link> -->
					</links>
				</configuration>
			</plugin>

			<!-- maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${v.maven-jar-plugin}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-source-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${v.maven-source-plugin}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-surefire-plugin -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${v.maven-surefire-plugin}</version>
				<configuration>
					<!-- 跳过测试 -->
					<skip>${maven-surefire-plugin.skip}</skip>

					<includes>
						<include>${maven-surefire-plugin.include}</include>
					</includes>

					<!-- Option to print summary of test suites or just print the test cases that have errors. Default value is: true. -->
					<printSummary>true</printSummary>
				</configuration>
			</plugin>

			<!-- maven-clean-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${v.maven-clean-plugin}</version>
				<executions>
					<execution>
						<id>default-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-deploy-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${v.maven-deploy-plugin}</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-install-plugin插件 -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-install-plugin</artifactId>
				<version>${v.maven-install-plugin}</version>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>install</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven-release-plugin -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<!-- maven-dependency-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>

			<!-- maven-site-plugin -->
			<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${v.maven-site-plugin}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.9.1</version>
					</dependency>
				</dependencies>
				<configuration>
					<locales>en</locales><!-- zh_CN -->
					<generateSitemap>true</generateSitemap>
					<outputDirectory>${maven-site-plugin.outputDirectory}</outputDirectory>
				</configuration>
			</plugin>

			<!-- jacoco-maven-plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${v.jacoco-maven-plugin}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
			</plugin>

		</plugins>

		<!-- pluginManagement -->
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${v.maven-antrun-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${v.maven-assembly-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${v.maven-war-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${v.maven-dependency-plugin}</version>
				</plugin>

				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>${v.maven-release-plugin}</version>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<!-- <plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
					<lifecycleMappingMetadata>
					<pluginExecutions>
					<pluginExecution>
					<pluginExecutionFilter>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<versionRange>[1.7,)</versionRange>
					<goals>
					<goal>run</goal>
					<goal>help</goal>
					</goals>
					</pluginExecutionFilter>
					<action>
					<ignore />
					</action>
					</pluginExecution>
					</pluginExecutions>
					</lifecycleMappingMetadata>
					</configuration>
					</plugin> -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${v.maven-plugin-plugin}</version>
					<configuration>
						<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
						<helpPackageName>org.apache.maven.plugins.help</helpPackageName>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<!-- *******************reporting***************************** -->
	<reporting>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${v.versions-maven-plugin}</version>

				<reportSets>
					<reportSet>
						<reports>
							<!-- versions:dependency-updates-report -->
							<report>dependency-updates-report</report>

							<!-- produces a report of those plugins which have newer versions available. -->
							<report>plugin-updates-report</report>

							<!-- produces a report of those properties which are used to control artifact versions and which properies have newer versions available. -->
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>

			</plugin>

			<!-- 生成java代码交叉引用和源代码的html格式 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${v.maven-jxr-plugin}</version>
				<configuration>
					<aggregate>range</aggregate>
				</configuration>
			</plugin>

			<!-- 代码格式检查 -->
			<!-- 乱七八糟的 一行多长都控制 Line is longer than 80 characters (found 99). -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${v.maven-checkstyle-plugin}</version>
				</plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${v.maven-dependency-plugin}</version>
			</plugin>

			<!--源码分析 -->
			<!-- -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${v.maven-pmd-plugin}</version>
			</plugin>

			<!-- taglist 检查报告 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${v.taglist-maven-plugin}</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>XXX</displayName>
								<tags>
									<tag>
										<matchString>XXX</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>TODO</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>FIXME</displayName>
								<tags>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>@deprecated</displayName>
								<tags>
									<tag>
										<matchString>@deprecated</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${v.maven-changes-plugin}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- [ERROR] 'git' 不是内部或外部命令，也不是可运行的程序 或批处理文件。 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>${v.maven-changelog-plugin}</version>
				<configuration>
					<!-- -->
					<skip>true</skip>
					<type>range</type>
					<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
					<range>30</range>
					<headingDateFormat>MM-dd</headingDateFormat>
					<dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<!-- 指定这个项目的组织机构信息 -->
	<organization>
		<name>feiLong</name>
		<url>https://github.com/ifeilong</url>
	</organization>

	<!-- 项目提交者信息 -->
	<developers>
		<developer>
			<id>feilong</id>
			<name>金鑫</name>
			<url>https://github.com/venusdrogon</url>
			<organization>feilong</organization>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>8</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<!-- 项目的贡献者,但不属于开发小组 -->
	<contributors>
		<contributor>
			<name>benjamin.liu</name>
			<url>https://github.com/benjaliu</url>
		</contributor>

		<contributor>
			<name>yi.huang</name>
			<url>https://github.com/ananbeike</url>
		</contributor>

		<contributor>
			<name>minglei.feng</name>
			<url>https://github.com/shade41-code</url>
		</contributor>

		<contributor>
			<name>ijiangtao</name>
			<url>https://github.com/ijiangtao</url>
		</contributor>
	</contributors>


	<profiles>
		<profile>
			<id>release</id>

			<build>
				<plugins>

					<!-- Gpg Signature -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${v.maven-gpg-plugin}</version>
						<executions>
							<execution>
								<id>oss</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>

								<!-- https://myshittycode.com/2017/08/07/maven-gpg-plugin-prevent-signing-prompt-or-gpg-signing-failed-no-such-file-or-directory-error/ -->
								<configuration>
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- 软件配置管理SCM (Software Configuration Management), 如cvs ,svn ,git -->
	<!-- The scm url must start with 'scm:' -->
	<scm>
		<url>https://github.com/ifeilong/feilong</url>
		<connection>scm:git:https://github.com/ifeilong/feilong</connection>
		<developerConnection>scm:git:git@github.com:ifeilong/feilong.git</developerConnection>
	</scm>

	<!-- 用于管理此项目的发布跟踪（bug跟踪） -->
	<issueManagement>
		<system>github</system>
		<url>https://github.com/ifeilong/feilong/issues</url>
	</issueManagement>

	<!-- 项目发布管理 -->
	<distributionManagement>
		<repository>
			<id>oss</id>
			<name>sonatype Staging Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>

		<snapshotRepository>
			<id>oss</id>
			<name>sonatype snapshots Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

</project>